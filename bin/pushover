#!/usr/bin/env ruby

require 'pushover'

include Bini
include Pushover
Options.on("-u", "--user USER", "Which user, can be a saved name or token.") { |o| Options[:user] = o}
Options.on("-a", "--app APPKEY", "Which app to notify, can be a saved name or apikey.") { |o| Options[:appkey] = o}
Options.on("-t", "--title [TITLE]", "Set the title of the notification (optional).") { |o| Options[:title] = o}
Options.on("-p", "--priority [PRIORITY]", OptionParser::DecimalInteger , "Set the priority of the notification from -1 to 1 (optional).") { |o| Options[:priority] = o}
Options.on("-d", "--device [DEVICE]", "Specify the device to send the notifcation to. (optional).") { |o| Options[:device] = o}
Options.on("-c", "--config_file [FILE]", "Set the target config file.") {|o| Options[:config_file] = o}
Options.on("--save-app NAME", "Saves the application to the config file under NAME.") { |o| Options[:save_app] = [Options[:appkey], o]}
Options.on("--save-user NAME", "Saves the user to the config file under NAME.") { |o| Options[:save_user] = [Options[:user], o]}

Options.parse!

# Order is important.
if Options[:config_file]
	puts "Selecting config file: #{Options[:config_file]}"
	Pushover::Config.save_file = Options[:config_file]
end

if Options[:save_app]
	puts "Saving application #{Options[:save_app][0]} to #{Options[:save_app][1]}."
	App.add Options[:save_app][0], Options[:save_app][1]
	puts "Save successful."
	exit
end

if Options[:save_user]
	puts "Saving user #{Options[:save_user][0]} to #{Options[:save_user][1]}."
	User.add Options[:save_user][0], Options[:save_user][1]
	puts "Save successful."
	exit
end

if ARGV.empty?
	puts "You must supply a message."
	exit
end
bail = false
message = ARGV.join(" ")

if !message
	puts "Must supply a message to be sent."
	bail = true
end

if !App.current_app?
	puts "Couldn't find an app via the cli or save file."
	bail = true
end

if !User.current_user?
	puts "Couldn't find a user via the cli or save file."
	bail = true
end
exit if bail

Pushover.configure do |c|
	c.user 			= User.current_user
	c.token	 		= App.current_app
	c.message 	= message
	c.title 		= Options[:title]
	c.priority 	= Options[:priority]
	c.device 		= Options[:device]
end

response = Pushover.notification

if response.code == "200"
	puts "Message sent successfully!"
else
	j = Yajl.load response.body
	puts "ErrorCode (#{response.code}): #{j['errors'].first}."
end
